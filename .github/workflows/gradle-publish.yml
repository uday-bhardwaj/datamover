# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

env:
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

on:
  push:
    branches:
      - master
      - dev
      - feature/*
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating tags and pushing version bumps
      packages: write  # Required for publishing to GitHub Packages

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: ossrh # Needed for Gradle/Maven publishing
          settings-path: ${{ github.workspace }} # Location for settings.xml

      - name: Setup Gradle (8.13)
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: '8.13'

      - name: Read Current Version
        id: version
        run: |
          CURRENT_VERSION=$(grep "version=" gradle.properties | cut -d'=' -f2)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "Current version: $CURRENT_VERSION"

      - name: Determine Release Version (if master)
        if: github.ref == 'refs/heads/master'
        run: |
          RELEASE_VERSION=$(echo "${{ env.CURRENT_VERSION }}" | sed 's/-SNAPSHOT//')
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Release version: $RELEASE_VERSION"

      - name: Grant Execute Permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Publish Package
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ./gradlew publish -Pversion=${{ env.RELEASE_VERSION }}
          else
            ./gradlew publish
          fi

      - name: Create Git Tag (if master)
        if: github.ref == 'refs/heads/master'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ env.RELEASE_VERSION }}" -m "Release version ${{ env.RELEASE_VERSION }}"
          git push origin "v${{ env.RELEASE_VERSION }}"

      - name: Bump Version to Next Snapshot (if master)
        if: github.ref == 'refs/heads/master'
        run: |
          NEW_VERSION=$(echo "${{ env.RELEASE_VERSION }}" | awk -F. '{$NF++; print}' OFS=.)
          echo "version=$NEW_VERSION-SNAPSHOT" > gradle.properties
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git commit -am "Bump version to $NEW_VERSION-SNAPSHOT"
          git push origin master
